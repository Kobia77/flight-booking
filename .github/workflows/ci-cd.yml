name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      PORT: 3001

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm install

      - name: Build and Run Docker Containers
        run: docker-compose up --build -d

      - name: Wait for MongoDB to be ready
        run: |
          until docker exec mongo mongo --eval "db.stats()" >/dev/null 2>&1; do
            echo "Waiting for MongoDB to start..."
            sleep 5
          done

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      # - name: Run Backend Tests
      #   working-directory: ./backend
      #   run: npm test

      - name: Run Cypress Tests
        working-directory: ./frontend
        run: npm run test:e2e

      - name: Stop Docker Containers
        if: always()
        run: docker-compose down
